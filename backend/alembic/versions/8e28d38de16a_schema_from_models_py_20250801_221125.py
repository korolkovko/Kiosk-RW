# script.py.mako
# Alembic revision script template

"""Schema from models.py - 20250801_221125

Revision ID: 8e28d38de16a
Revises: 
Create Date: 2025-08-01 20:11:25.573826

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8e28d38de16a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('address', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('work_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('legal_entity', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('day_categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('food_categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('known_customers',
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('loyalty_card_code', sa.String(length=100), nullable=True),
    sa.Column('auth_method', sa.Enum('PSW', 'SMS', 'QR', 'NFC_DEVICE', 'OAUTH2', name='authmethod'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_anonymous_link', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('customer_id'),
    sa.UniqueConstraint('loyalty_card_code')
    )
    op.create_index(op.f('ix_known_customers_customer_id'), 'known_customers', ['customer_id'], unique=False)
    op.create_index(op.f('ix_known_customers_email'), 'known_customers', ['email'], unique=False)
    op.create_index(op.f('ix_known_customers_phone'), 'known_customers', ['phone'], unique=False)
    op.create_table('payment_methods',
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description_ru', sa.String(length=200), nullable=False),
    sa.Column('description_en', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('code'),
    sa.UniqueConstraint('code')
    )
    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('units_of_measure',
    sa.Column('name_eng', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('name_eng')
    )
    op.create_index(op.f('ix_units_of_measure_name_eng'), 'units_of_measure', ['name_eng'], unique=False)
    op.create_table('devices',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('device_type', sa.Enum('KIOSK', 'POS_TERMINAL', 'FISCAL_PRINTER', 'KKT', name='devicetype'), nullable=False),
    sa.Column('device_code', sa.String(length=50), nullable=False),
    sa.Column('device_name', sa.String(length=200), nullable=False),
    sa.Column('branch_name', sa.String(length=200), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('device_os', sa.String(length=50), nullable=True),
    sa.Column('is_managed', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(timezone=True), nullable=True),
    sa.Column('registered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['branch_name'], ['branches.name'], ),
    sa.PrimaryKeyConstraint('device_id')
    )
    op.create_index(op.f('ix_devices_device_code'), 'devices', ['device_code'], unique=True)
    op.create_index(op.f('ix_devices_device_id'), 'devices', ['device_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('role_name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role_name'], ['roles.name'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('fiscal_devices',
    sa.Column('fiscal_id', sa.Integer(), nullable=False),
    sa.Column('fiscal_number', sa.String(length=50), nullable=False),
    sa.Column('inn', sa.String(length=12), nullable=False),
    sa.Column('fiscal_mode', sa.String(length=20), nullable=True),
    sa.Column('ofd_provider', sa.String(length=100), nullable=True),
    sa.Column('certificate_expiry', sa.Date(), nullable=True),
    sa.Column('last_fiscal_report', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['fiscal_id'], ['devices.device_id'], ),
    sa.PrimaryKeyConstraint('fiscal_id')
    )
    op.create_table('items_live',
    sa.Column('item_id', sa.BigInteger(), nullable=False),
    sa.Column('name_ru', sa.String(length=200), nullable=False),
    sa.Column('name_eng', sa.String(length=200), nullable=True),
    sa.Column('description_ru', sa.Text(), nullable=False),
    sa.Column('description_eng', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('unit_measure_name_eng', sa.String(length=100), nullable=False),
    sa.Column('price_net', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('vat_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('vat_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_gross', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('food_category_name', sa.String(length=100), nullable=False),
    sa.Column('day_category_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['day_category_name'], ['day_categories.name'], ),
    sa.ForeignKeyConstraint(['food_category_name'], ['food_categories.name'], ),
    sa.ForeignKeyConstraint(['unit_measure_name_eng'], ['units_of_measure.name_eng'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_items_live_item_id'), 'items_live', ['item_id'], unique=False)
    op.create_table('pos_terminals',
    sa.Column('terminal_id', sa.Integer(), nullable=False),
    sa.Column('bank_terminal_id', sa.String(length=50), nullable=False),
    sa.Column('merchant_id', sa.String(length=50), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('supported_card_types', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('min_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['terminal_id'], ['devices.device_id'], ),
    sa.PrimaryKeyConstraint('terminal_id')
    )
    op.create_table('sessions',
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.BigInteger(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expired_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_token', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['known_customers.customer_id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index(op.f('ix_sessions_session_id'), 'sessions', ['session_id'], unique=False)
    op.create_index(op.f('ix_sessions_session_token'), 'sessions', ['session_token'], unique=False)
    op.create_table('items_live_available',
    sa.Column('item_id', sa.BigInteger(), nullable=False),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.Column('reserved_quantity', sa.Integer(), nullable=False),
    sa.Column('unit_name_ru', sa.String(length=100), nullable=False),
    sa.Column('unit_name_eng', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items_live.item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_items_live_available_item_id'), 'items_live_available', ['item_id'], unique=False)
    op.create_table('items_live_stock_replenishment',
    sa.Column('operation_id', sa.BigInteger(), nullable=False),
    sa.Column('item_id', sa.BigInteger(), nullable=False),
    sa.Column('name_ru', sa.String(length=200), nullable=False),
    sa.Column('description_ru', sa.Text(), nullable=False),
    sa.Column('unit_name_ru', sa.String(length=100), nullable=False),
    sa.Column('unit_name_eng', sa.String(length=100), nullable=True),
    sa.Column('change_quantity', sa.Integer(), nullable=False),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items_live.item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('operation_id')
    )
    op.create_index(op.f('ix_items_live_stock_replenishment_item_id'), 'items_live_stock_replenishment', ['item_id'], unique=False)
    op.create_index(op.f('ix_items_live_stock_replenishment_operation_id'), 'items_live_stock_replenishment', ['operation_id'], unique=False)
    op.create_table('orders',
    sa.Column('order_id', sa.BigInteger(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('order_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('total_amount_net', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount_vat', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount_gross', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('pickup_number', sa.String(length=20), nullable=False),
    sa.Column('pin_code', sa.String(length=10), nullable=False),
    sa.Column('kiosk_id', sa.Integer(), nullable=True),
    sa.Column('kiosk_ip', sa.String(length=45), nullable=True),
    sa.Column('kiosk_port', sa.String(length=10), nullable=True),
    sa.Column('pos_terminal_id', sa.Integer(), nullable=True),
    sa.Column('pos_terminal_ip', sa.String(length=45), nullable=True),
    sa.Column('pos_terminal_port', sa.String(length=10), nullable=True),
    sa.Column('fiscal_machine_id', sa.Integer(), nullable=True),
    sa.Column('fiscal_machine_ip', sa.String(length=45), nullable=True),
    sa.Column('fiscal_machine_port', sa.String(length=10), nullable=True),
    sa.Column('fiscal_printer_id', sa.Integer(), nullable=True),
    sa.Column('fiscal_printer_ip', sa.String(length=45), nullable=True),
    sa.Column('fiscal_printer_port', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['known_customers.customer_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.session_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_orders_order_date'), 'orders', ['order_date'], unique=False)
    op.create_index(op.f('ix_orders_order_id'), 'orders', ['order_id'], unique=False)
    op.create_index(op.f('ix_orders_pickup_number'), 'orders', ['pickup_number'], unique=False)
    op.create_table('payments',
    sa.Column('payment_id', sa.BigInteger(), nullable=False),
    sa.Column('order_id', sa.BigInteger(), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('total_amount_net', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('vat_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('total_amount_vat', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount_gross', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('method_code', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('AWAITING', 'DECLINED', 'ERROR', 'PAID', name='paymentstatus'), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('payment_details', sa.Text(), nullable=True),
    sa.Column('pos_terminal_id', sa.Integer(), nullable=True),
    sa.Column('response_code', sa.String(length=10), nullable=True),
    sa.Column('response_message', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['method_code'], ['payment_methods.code'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_index(op.f('ix_payments_order_id'), 'payments', ['order_id'], unique=False)
    op.create_index(op.f('ix_payments_payment_id'), 'payments', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payments_transaction_id'), 'payments', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_transaction_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_order_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_orders_pickup_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_date'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_items_live_stock_replenishment_operation_id'), table_name='items_live_stock_replenishment')
    op.drop_index(op.f('ix_items_live_stock_replenishment_item_id'), table_name='items_live_stock_replenishment')
    op.drop_table('items_live_stock_replenishment')
    op.drop_index(op.f('ix_items_live_available_item_id'), table_name='items_live_available')
    op.drop_table('items_live_available')
    op.drop_index(op.f('ix_sessions_session_token'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_session_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_table('pos_terminals')
    op.drop_index(op.f('ix_items_live_item_id'), table_name='items_live')
    op.drop_table('items_live')
    op.drop_table('fiscal_devices')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_devices_device_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_code'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_units_of_measure_name_eng'), table_name='units_of_measure')
    op.drop_table('units_of_measure')
    op.drop_table('roles')
    op.drop_table('payment_methods')
    op.drop_index(op.f('ix_known_customers_phone'), table_name='known_customers')
    op.drop_index(op.f('ix_known_customers_email'), table_name='known_customers')
    op.drop_index(op.f('ix_known_customers_customer_id'), table_name='known_customers')
    op.drop_table('known_customers')
    op.drop_table('food_categories')
    op.drop_table('day_categories')
    op.drop_table('branches')
    # ### end Alembic commands ###